version: 2.1
# Use a package of configuration called an orb.
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            rm -rf inventory
            aws cloudformation deploy \
              --template-file cloudfomration-server.yml \
              --stack-name myStack--${CIRCLE_WORKFLOW_ID:0:7}
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> inventory
            cat inventory
  # deploy_cloudfront:
  #     docker:
  #       - image: amazon/aws-cli
  #     steps:
  #       - checkout
  #       - run:
  #           name: deploy cloudfront
  #           command: |
  #             aws cloudformation deploy \
  #               --template-file ./cloudfront.yml \
  #               --stack-name production-distro \
  #               --parameter-overrides PipelineID=herat-demo
  # # Exercise: Config and Deployment
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["e7:59:53:08:f6:9d:b4:6c:db:f8:b5:49:ed:1e:fa:ec"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            cat inventory
            ansible-playbook -i inventory main-remote.yml
      # - destroy_environment
  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Test job
          command: return 1
      - destroy_environment
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
      # - smoke_test:
      #     requires:
      #       - configure_infrastructure
